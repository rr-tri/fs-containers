version: "3.8" # Version 3.8 is quite new and should work

services:
  app:
    image: front-end
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: ./todo-frontend/Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: todo-frontend # This will name the container
  server:
    image: back-end
    build: ./todo-backend
    volumes:
      - ./todo-backend:/usr/src/app
    container_name: todo-backend
    environment:
      - REDIS_URL=redis://host.docker.internal:6379
      - MONGO_URL=mongodb://the_username:the_password@host.docker.internal:3456/the_database
  mongo:
    image: mongo:4.4.16 # Cause my current system does not appear to have CPU with AVX support!
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
  redis:
    image: redis
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "yes"] # Overwrite the CMD
    volumes:
      - ./todo-backend/redis_data:/data
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
      - server # wait for the server container to be started

volumes:
  mongo_data:
